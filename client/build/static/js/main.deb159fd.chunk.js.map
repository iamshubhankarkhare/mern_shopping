{"version":3,"sources":["actions/errorAction.js","actions/types.js","actions/authAction.js","components/RegisterModal.js","components/LoginModal.js","components/Logout.jsx","components/AppNavbar.jsx","actions/itemActions.js","components/ShoppingList.jsx","components/ItemModal.jsx","reducers/itemReducer.js","reducers/errorReducer.js","reducers/authReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["returnErrors","msg","status","id","type","payload","clearErrors","tokenConfig","getState","token","auth","config","headers","RegisterModal","state","modal","name","email","password","toggle","props","setState","onChange","e","target","value","onSubmit","preventDefault","newUser","register","prevProps","this","error","isAuthenticated","NavLink","onClick","href","Modal","isOpen","ModalHeader","Alert","color","ModalBody","Form","FormGroup","Label","for","Input","placeholder","className","Button","style","marginTop","block","Component","connect","dispatch","body","JSON","stringify","axios","post","then","res","data","catch","err","response","LoginModal","user","login","Logout","logout","AppNavbar","authLinks","NavItem","guestLinks","Navbar","expand","listStyle","Container","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","setItemsLoading","ShoppingList","onDeleteClick","deleteItem","getItems","items","item","ListGroup","TransitionGroup","map","_id","CSSTransition","key","timeout","classNames","ListGroupItem","size","bind","get","delete","ItemModal","newItem","addItem","marginBottom","initialState","loading","localStorage","getItem","isLoading","combineReducers","action","filter","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","App","ReactDOM","render","document","getElementById"],"mappings":"6ZAGaA,EAAe,SAACC,EAAKC,GAAuB,IAAfC,EAAc,uDAAT,KAC3C,MAAO,CACHC,KCOkB,aDNlBC,QAAS,CAAEJ,MAAKC,SAAQC,QAInBG,EAAc,WACvB,MAAO,CACHF,KCCoB,iBC4EfG,EAAc,SAACC,GACxB,IAAMC,EAAQD,IAAWE,KAAKD,MAExBE,EAAS,CACXC,QAAS,CACL,eAAgB,qBAOxB,OAJIH,IACAE,EAAOC,QAAQ,gBAAkBH,GAG9BE,GC5FLE,E,4MACFC,MAAQ,CACJC,OAAO,EACPC,KAAM,GACNC,MAAO,GACPC,SAAU,GACVjB,IAAK,M,EAiCTkB,OAAS,WAGL,EAAKC,MAAMd,cACX,EAAKe,SAAS,CACVN,OAAQ,EAAKD,MAAMC,S,EAI3BO,SAAW,SAACC,GACR,EAAKF,SAAL,eAAiBE,EAAEC,OAAOR,KAAOO,EAAEC,OAAOC,S,EAG9CC,SAAW,SAACH,GACRA,EAAEI,iBADY,MAGoB,EAAKb,MACjCc,EAAU,CACZZ,KALU,EAGNA,KAGJC,MANU,EAGAA,MAIVC,SAPU,EAGOA,UAMrB,EAAKE,MAAMS,SAASD,I,iEA9CLE,GAAY,IAAD,EACSC,KAAKX,MAAhCY,EADkB,EAClBA,MAAOC,EADW,EACXA,gBACXD,IAAUF,EAAUE,QACH,kBAAbA,EAAM7B,GACN4B,KAAKV,SAAS,CAAEpB,IAAK+B,EAAM/B,IAAIA,MAM/B8B,KAAKV,SAAS,CAAEpB,IAAK,QAIzB8B,KAAKjB,MAAMC,OACPkB,GACAF,KAAKZ,W,+BAkCb,OACI,6BACI,kBAACe,EAAA,EAAD,CAASC,QAASJ,KAAKZ,OAAQiB,KAAK,KAApC,YAEA,kBAACC,EAAA,EAAD,CACIC,OAAQP,KAAKjB,MAAMC,MACnBI,OAAQY,KAAKZ,QACb,kBAACoB,EAAA,EAAD,CAAapB,OAAQY,KAAKZ,QAA1B,YACCY,KAAKjB,MAAMb,IAAM,kBAACuC,EAAA,EAAD,CAAOC,MAAM,UAAUV,KAAKjB,MAAMb,KAAe,KACnE,kBAACyC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAMjB,SAAUK,KAAKL,UACjB,kBAACkB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,IAAI,QAAX,QACA,kBAACC,EAAA,EAAD,CAAO3C,KAAK,OACRY,KAAK,OACLb,GAAG,OACH6C,YAAY,SACZC,UAAU,OACV3B,SAAUS,KAAKT,WAGnB,kBAACuB,EAAA,EAAD,CAAOC,IAAI,SAAX,UACA,kBAACC,EAAA,EAAD,CAAO3C,KAAK,QACRY,KAAK,QACLb,GAAG,QACH6C,YAAY,WACZC,UAAU,OACV3B,SAAUS,KAAKT,WAGnB,kBAACuB,EAAA,EAAD,CAAOC,IAAI,YAAX,YACA,kBAACC,EAAA,EAAD,CAAO3C,KAAK,WACRY,KAAK,WACLb,GAAG,WACH6C,YAAY,aACZC,UAAU,OACV3B,SAAUS,KAAKT,WAEnB,kBAAC4B,EAAA,EAAD,CACIT,MAAM,OACNU,MAAO,CAAEC,UAAW,QAAUC,OAAK,GAFvC,qB,GAvGJC,aAgIbC,eALS,SAAAzC,GAAK,MAAK,CAC9BmB,gBAAiBnB,EAAMJ,KAAKuB,gBAC5BD,MAAOlB,EAAMkB,SAGuB,CAAEH,SDxGlB,SAAC,GAAD,IAAGb,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,SAAhB,OAA+B,SAAAsC,GACnD,IAMMC,EAAOC,KAAKC,UAAU,CAAE3C,OAAMC,QAAOC,aAE3C0C,IAAMC,KAAK,aAAcJ,EARV,CACX7C,QAAS,CACL,eAAgB,sBAOnBkD,MAAK,SAAAC,GAAG,OAAIP,EAAS,CAClBpD,KDlCoB,mBCmCpBC,QAAS0D,EAAIC,UAEhBC,OAAM,SAAAC,GACHV,EAASxD,EAAakE,EAAIC,SAASH,KAAME,EAAIC,SAASjE,OAAQ,kBAE9DsD,EAAS,CACLpD,KDxCa,uBE8HuBE,eAArCiD,CAAoD1C,GChI7DuD,E,4MACFtD,MAAQ,CACJC,OAAO,EACPE,MAAO,GACPC,SAAU,GACVjB,IAAK,M,EA8BTkB,OAAS,WAEL,EAAKC,MAAMd,cACX,EAAKe,SAAS,CACVN,OAAQ,EAAKD,MAAMC,S,EAG3BO,SAAW,SAACC,GACR,EAAKF,SAAL,eAAiBE,EAAEC,OAAOR,KAAOO,EAAEC,OAAOC,S,EAG9CC,SAAW,SAACH,GACRA,EAAEI,iBADY,MAGc,EAAKb,MAC3BuD,EAAO,CACTpD,MALU,EAGNA,MAGJC,SANU,EAGCA,UAKf,EAAKE,MAAMkD,MAAMD,I,iEAxCFvC,GAAY,IAAD,EACSC,KAAKX,MAAhCY,EADkB,EAClBA,MAAOC,EADW,EACXA,gBACXD,IAAUF,EAAUE,QACH,eAAbA,EAAM7B,GACN4B,KAAKV,SAAS,CAAEpB,IAAK+B,EAAM/B,IAAIA,MAG/B8B,KAAKV,SAAS,CAAEpB,IAAK,QAIzB8B,KAAKjB,MAAMC,OACPkB,GACAF,KAAKZ,W,+BA+Bb,OACI,6BACI,kBAACe,EAAA,EAAD,CAASC,QAASJ,KAAKZ,OAAQiB,KAAK,KAApC,SAEA,kBAACC,EAAA,EAAD,CACIC,OAAQP,KAAKjB,MAAMC,MACnBI,OAAQY,KAAKZ,QACb,kBAACoB,EAAA,EAAD,CAAapB,OAAQY,KAAKZ,QAA1B,SACCY,KAAKjB,MAAMb,IAAM,kBAACuC,EAAA,EAAD,CAAOC,MAAM,UAAUV,KAAKjB,MAAMb,KAAe,KACnE,kBAACyC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAMjB,SAAUK,KAAKL,UACjB,kBAACkB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,IAAI,SAAX,UACA,kBAACC,EAAA,EAAD,CAAO3C,KAAK,QACRY,KAAK,QACLb,GAAG,QACH6C,YAAY,WACZC,UAAU,OACV3B,SAAUS,KAAKT,WAGnB,kBAACuB,EAAA,EAAD,CAAOC,IAAI,YAAX,YACA,kBAACC,EAAA,EAAD,CAAO3C,KAAK,WACRY,KAAK,WACLb,GAAG,WACH6C,YAAY,aACZC,UAAU,OACV3B,SAAUS,KAAKT,WAEnB,kBAAC4B,EAAA,EAAD,CACIT,MAAM,OACNU,MAAO,CAAEC,UAAW,QAAUC,OAAK,GAFvC,kB,GAvFPC,aAgHVC,eALS,SAAAzC,GAAK,MAAK,CAC9BmB,gBAAiBnB,EAAMJ,KAAKuB,gBAC5BD,MAAOlB,EAAMkB,SAGuB,CAAEsC,MFhErB,SAAC,GAAD,IAAGrD,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OAAyB,SAAAsC,GAC1C,IAMMC,EAAOC,KAAKC,UAAU,CAAE1C,QAAOC,aAErC0C,IAAMC,KAAK,YAAaJ,EART,CACX7C,QAAS,CACL,eAAgB,sBAOnBkD,MAAK,SAAAC,GAAG,OAAIP,EAAS,CAClBpD,KD7DiB,gBC8DjBC,QAAS0D,EAAIC,UAEhBC,OAAM,SAAAC,GACHV,EAASxD,EAAakE,EAAIC,SAASH,KAAME,EAAIC,SAASjE,OAAQ,eAE9DsD,EAAS,CACLpD,KDnEU,oBGiHuBE,eAAlCiD,CAAiDa,GCnHnDG,EAAb,uKAKQ,OACI,kBAAC,WAAD,KACI,kBAACrC,EAAA,EAAD,CAASC,QAASJ,KAAKX,MAAMoD,OAAQpC,KAAK,KAA1C,eAPhB,GAA4BkB,aAebC,cAAQ,KAAM,CAAEiB,OH4DT,WAClB,MAAO,CACHpE,KD1EsB,oBIYfmD,CAA0BgB,GCb5BE,EAAb,4MACI3D,MAAQ,CACJwB,QAAQ,GAFhB,EASInB,OAAS,WACL,EAAKE,SAAS,CACViB,QAAS,EAAKxB,MAAMwB,UAXhC,uDAiBc,IAAD,EAC6BP,KAAKX,MAAMV,KAArCuB,EADH,EACGA,gBAAiBoC,EADpB,EACoBA,KAGnBK,EACF,kBAAC,WAAD,KACI,kBAACC,EAAA,EAAD,KACI,0BAAM1B,UAAU,oBACZ,gCAASoB,EAAI,kBAAcA,EAAKrD,MAAS,MAGjD,kBAAC2D,EAAA,EAAD,KACI,kBAAC,EAAD,QAINC,EACF,kBAAC,WAAD,KACI,kBAACD,EAAA,EAAD,KACI,kBAAC,EAAD,OAEJ,kBAACA,EAAA,EAAD,KACI,kBAAC,EAAD,QAIZ,OACI,6BAEI,kBAACE,EAAA,EAAD,CAAQpC,MAAM,OAAOqC,OAAO,KAAK7B,UAAU,OAAOE,MAAO,CAAE4B,UAAW,SAClE,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAa7C,KAAK,KAAlB,iBACA,kBAAC8C,EAAA,EAAD,CAAe/C,QAASJ,KAAKZ,SAC7B,kBAACgE,EAAA,EAAD,CAAU7C,OAAQP,KAAKjB,MAAMwB,OAAQ8C,QAAM,IAC3C,kBAACC,EAAA,EAAD,CAAKpC,UAAU,UAAUmC,QAAM,IAC9BnD,EAAkByC,EAAYE,SApDvD,GAA+BtB,aA+DhBC,eAHS,SAACzC,GAAD,MAAY,CAChCJ,KAAMI,EAAMJ,QAEwB,KAAzB6C,CAA+BkB,G,kCCpCjCa,EAAkB,WAC3B,MAAO,CACHlF,KNlCqB,kBOKvBmF,E,4MAKFC,cAAgB,SAACrF,GACb,EAAKiB,MAAMqE,WAAWtF,I,kEAHtB4B,KAAKX,MAAMsE,a,+BAaL,IAAD,OACGC,EAAU5D,KAAKX,MAAMwE,KAArBD,MACR,OACI,kBAACX,EAAA,EAAD,KAEI,kBAACa,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAiB7C,UAAU,kBACtB0C,EAAMI,KAAI,gBAAGC,EAAH,EAAGA,IAAKhF,EAAR,EAAQA,KAAR,OACP,kBAACiF,EAAA,EAAD,CAAeC,IAAKF,EAAKG,QAAS,IAAKC,WAAW,QAC9C,kBAACC,EAAA,EAAD,KACK,EAAKjF,MAAMa,gBAAmB,kBAACiB,EAAA,EAAD,CAAQD,UAAU,aAAaR,MAAM,SAAS6D,KAAK,KAC9EnE,QAAS,EAAKqD,cAAce,KAAK,EAAMP,IADZ,QACsC,KACpEhF,c,GA5BVsC,aAiDZC,eANS,SAACzC,GAAD,MAAY,CAChC8E,KAAM9E,EAAM8E,KACZ3D,gBAAiBnB,EAAMJ,KAAKuB,mBAIQ,CAAEyD,SDnDlB,kBAAM,SAAAlC,GAC1BA,EAAS8B,KACT1B,IAAM4C,IAAI,cAAc1C,MAAK,SAAAC,GAAG,OAC5BP,EAAS,CACLpD,KNVa,YMWbC,QAAS0D,EAAIC,UAEhBC,OAAM,SAAAC,GAAG,OAAIV,EAASxD,EAAakE,EAAIC,SAASH,KAAME,EAAIC,SAASH,YC4CxByB,WD1C1B,SAACtF,GAAD,OAAQ,SAACqD,EAAUhD,GACzCoD,IAAM6C,OAAN,oBAA0BtG,GAAMI,EAAYC,IAAWsD,MAAK,SAAAC,GAAG,OAC3DP,EAAS,CACLpD,KNhBe,cMiBfC,QAASF,OAEZ8D,OAAM,SAAAC,GAAG,OAAIV,EAASxD,EAAakE,EAAIC,SAASH,KAAME,EAAIC,SAASH,aCoC7DT,CAAmDgC,GCjD5DmB,E,4MACF5F,MAAQ,CACJC,OAAO,EACPC,KAAM,I,EASVG,OAAS,WACL,EAAKE,SAAS,CACVN,OAAQ,EAAKD,MAAMC,S,EAG3BO,SAAW,SAACC,GACR,EAAKF,SAAL,eAAiBE,EAAEC,OAAOR,KAAOO,EAAEC,OAAOC,S,EAG9CC,SAAW,SAACH,GACRA,EAAEI,iBACF,IAAMgF,EAAU,CACZ3F,KAAM,EAAKF,MAAME,MAErB,EAAKI,MAAMwF,QAAQD,GAEnB,EAAKxF,U,uDAIL,OACI,6BACKY,KAAKX,MAAMa,gBACR,kBAACiB,EAAA,EAAD,CAAQT,MAAM,OAAOU,MAAO,CAAE0D,aAAc,QAAU1E,QAASJ,KAAKZ,QAApE,YAGA,wBAAI8B,UAAU,cAAd,iCAGJ,kBAACZ,EAAA,EAAD,CACIC,OAAQP,KAAKjB,MAAMC,MACnBI,OAAQY,KAAKZ,QACb,kBAACoB,EAAA,EAAD,CAAapB,OAAQY,KAAKZ,QAA1B,wBAEA,kBAACuB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAMjB,SAAUK,KAAKL,UACjB,kBAACkB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,IAAI,QACP,kBAACC,EAAA,EAAD,CAAO3C,KAAK,OAAOY,KAAK,OAAOb,GAAG,OAAO6C,YAAY,sBAAsB1B,SAAUS,KAAKT,WAG1F,kBAAC4B,EAAA,EAAD,CACIT,MAAM,OACNU,MAAO,CAAEC,UAAW,QAAUC,OAAK,GAFvC,sB,GArDZC,aA8ETC,eALS,SAAAzC,GAAK,MAAK,CAC9B8E,KAAM9E,EAAM8E,KACZ3D,gBAAiBnB,EAAMJ,KAAKuB,mBAGQ,CAAE2E,QF9DnB,SAAChB,GAAD,OAAU,SAACpC,EAAUhD,GACxCoD,IAAMC,KAAK,YAAa+B,EAAMrF,EAAYC,IACrCsD,MAAK,SAAAC,GAAG,OACLP,EAAS,CACLpD,KN3BQ,WM4BRC,QAAS0D,EAAIC,UAGpBC,OAAM,SAAAC,GAAG,OAAIV,EAASxD,EAAakE,EAAIC,SAASH,KAAME,EAAIC,SAASH,aEsD7DT,CAAsCmD,G,iCCnF/CI,GAAe,CACjBnB,MAAO,GACPoB,SAAS,GCFPD,GAAe,CACjB7G,IAAK,GACLC,OAAQ,KACRC,GAAI,MCJF2G,GAAe,CACjBrG,MAAOuG,aAAaC,QAAQ,SAC5BhF,gBAAiB,KACjBiF,WAAW,EACX7C,KAAM,MCFK8C,eAAgB,CAC3BvB,KHGW,WAAyC,IAA/B9E,EAA8B,uDAAtBgG,GAAcM,EAAQ,uCACnD,OAAQA,EAAOhH,MACX,ITViB,YSWb,OAAO,6BACAU,GADP,IAEI6E,MAAOyB,EAAO/G,QACd0G,SAAS,IAEjB,ITdmB,cSef,OAAO,6BACAjG,GADP,IAEI6E,MAAO7E,EAAM6E,MAAM0B,QAAO,SAAAzB,GAAI,OAAIA,EAAKI,MAAQoB,EAAO/G,aAE9D,ITpBgB,WSqBZ,OAAO,6BACAS,GADP,IAEI6E,MAAM,CAAEyB,EAAO/G,SAAV,oBAAsBS,EAAM6E,UAEzC,ITvBqB,gBSwBjB,OAAO,6BACA7E,GADP,IAEIiG,SAAS,IAEjB,QACI,OAAOjG,IG1BfkB,MFEW,WAAyC,IAA/BlB,EAA8B,uDAAtBgG,GAAcM,EAAQ,uCACnD,OAAQA,EAAOhH,MACX,IVEkB,aUDd,MAAO,CACHH,IAAKmH,EAAO/G,QAAQJ,IACpBC,OAAQkH,EAAO/G,QAAQH,OACvBC,GAAIiH,EAAO/G,QAAQF,IAE3B,IVHoB,eUIhB,MAAO,CACHF,IAAK,GACLC,OAAQ,KACRC,GAAI,MAEZ,QACI,OAAOW,IEhBfJ,KDEW,WAAyC,IAA/BI,EAA8B,uDAAtBgG,GAAcM,EAAQ,uCACnD,OAAQA,EAAOhH,MACX,IXPoB,eWQhB,OAAO,6BACAU,GADP,IAEIoG,WAAW,IAEnB,IXXmB,cWYf,OAAO,6BACApG,GADP,IAEImB,iBAAiB,EACjBiF,WAAW,EACX7C,KAAM+C,EAAO/G,UAErB,IXhBqB,gBWiBrB,IXdwB,mBWgBpB,OADA2G,aAAaM,QAAQ,QAASF,EAAO/G,QAAQI,OACtC,0CACAK,GACAsG,EAAO/G,SAFd,IAGI4B,iBAAiB,EACjBiF,WAAW,EACX7C,KAAM+C,EAAO/G,UAErB,IX3BkB,aW4BlB,IX1BkB,aW2BlB,IX1BsB,iBW2BtB,IXzBqB,gBW2BjB,OADA2G,aAAaO,WAAW,SACjB,6BACAzG,GADP,IAEIL,MAAO,KACP4D,KAAM,KACNpC,iBAAiB,EACjBiF,WAAW,IAGnB,QACI,OAAOpG,MExCb0G,GAAa,CAACC,KAMLC,GAJDC,YAAYC,GAJL,GAIgCC,YACjDC,IAAe,WAAf,EAAmBN,IAClBO,OAAOC,sCAAwCD,OAAOC,wCAA2CH,MCCjFI,G,kLAEbP,GAAMlE,UbDgB,SAACA,EAAUhD,GACrCgD,EAAS,CAAEpD,KDVa,iBCcxBwD,IAAM4C,IAAI,iBAAkBjG,EAAYC,IAAWsD,MAAK,SAAAC,GACpDP,EAAS,CACLpD,KDfe,cCgBfC,QAAS0D,EAAIC,UAGhBC,OAAM,SAAAC,GACHV,EAASxD,EAAakE,EAAIC,SAASH,KAAME,EAAIC,SAASjE,SACtDsD,EAAS,CACLpD,KDrBU,uB,+BcWlB,OACI,kBAAC,IAAD,CAAUsH,MAAOA,IACb,yBAAKzE,UAAU,OACX,kBAAC,EAAD,MACA,kBAAC+B,EAAA,EAAD,KACI,kBAAC,EAAD,MACA,kBAAC,EAAD,a,GAXS1B,aCRjC4E,IAASC,OACL,kBAAC,GAAD,MAEAC,SAASC,eAAe,W","file":"static/js/main.deb159fd.chunk.js","sourcesContent":["import { GET_ERRORS, CLEAR_ERRORS } from './types';\n\n\nexport const returnErrors = (msg, status, id = null) => {\n    return {\n        type: GET_ERRORS,\n        payload: { msg, status, id }\n    };\n};\n\nexport const clearErrors = () => {\n    return {\n        type: CLEAR_ERRORS\n    };\n};","export const GET_ITEMS = 'GET_ITEMS'\nexport const ADD_ITEM = 'ADD_ITEM'\nexport const DELETE_ITEM = 'DELETE_ITEM'\nexport const ITEMS_LOADING = 'ITEMS_LOADING'\nexport const USER_LOADING = 'USER_LOADING'\nexport const USER_LOADED = 'USER_LOADED'\nexport const AUTH_ERROR = 'AUTH_ERROR'\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS'\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS'\nexport const REGISTER_FAIL = 'REGISTER_FAIL'\nexport const GET_ERRORS = 'GET_ERRORS'\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS'\n\n\n\n\n\n\n\n\n\n","import {\n    USER_LOADED,\n    USER_LOADING,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT_SUCCESS,\n    REGISTER_SUCCESS,\n    REGISTER_FAIL\n} from './types';\nimport axios from 'axios';\nimport { returnErrors } from './errorAction';\n\nexport const loadUser = () => (dispatch, getState) => {\n    dispatch({ type: USER_LOADING });\n\n\n\n    axios.get('/api/auth/user', tokenConfig(getState)).then(res => {\n        dispatch({\n            type: USER_LOADED,\n            payload: res.data\n        })\n    })\n        .catch(err => {\n            dispatch(returnErrors(err.response.data, err.response.status))\n            dispatch({\n                type: AUTH_ERROR\n            })\n        })\n}\n\n//register\nexport const register = ({ name, email, password }) => dispatch => {\n    const config = {\n        headers: {\n            \"Content-type\": \"application/json\"\n        }\n    }\n\n    const body = JSON.stringify({ name, email, password })\n\n    axios.post('api/users/', body, config)\n        .then(res => dispatch({\n            type: REGISTER_SUCCESS,\n            payload: res.data\n        }))\n        .catch(err => {\n            dispatch(returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL'))\n\n            dispatch({\n                type: REGISTER_FAIL\n            })\n        })\n\n}\n//login \nexport const login = ({ email, password }) => dispatch => {\n    const config = {\n        headers: {\n            \"Content-type\": \"application/json\"\n        }\n    }\n\n    const body = JSON.stringify({ email, password })\n\n    axios.post('api/auth/', body, config)\n        .then(res => dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        }))\n        .catch(err => {\n            dispatch(returnErrors(err.response.data, err.response.status, 'LOGIN_FAIL'))\n\n            dispatch({\n                type: LOGIN_FAIL\n            })\n        })\n\n}\n//logout\nexport const logout = () => {\n    return {\n        type: LOGOUT_SUCCESS\n    }\n}\n\n\n//set header and config\nexport const tokenConfig = (getState) => {\n    const token = getState().auth.token;\n\n    const config = {\n        headers: {\n            \"Content-type\": \"application/json\"\n        }\n    }\n    if (token) {\n        config.headers['x-auth-token'] = token;\n\n    }\n    return config;\n}\n","import React, { Component } from 'react'\nimport { Button, Modal, ModalHeader, Alert, NavLink, ModalBody, Form, FormGroup, Label, Input } from 'reactstrap'\nimport { connect } from 'react-redux'\nimport PropTypes from \"prop-types\";\nimport { register } from \"../actions/authAction\";\nimport { clearErrors } from \"../actions/errorAction\";\n\n\n\nclass RegisterModal extends Component {\n    state = {\n        modal: false,\n        name: \"\",\n        email: '',\n        password: '',\n        msg: null\n    }\n\n    static propTypes = {\n        isAuthenticated: PropTypes.bool,\n        error: PropTypes.object.isRequired,\n        register: PropTypes.func.isRequired,\n        clearErrors: PropTypes.func.isRequired\n    }\n    componentDidUpdate(prevProps) {\n        const { error, isAuthenticated } = this.props;\n        if (error !== prevProps.error) {\n            if (error.id === 'REGISTER_FAIL') {\n                this.setState({ msg: error.msg.msg })\n\n\n\n            }\n            else {\n                this.setState({ msg: null })\n            }\n\n        }\n        if (this.state.modal) {\n            if (isAuthenticated)\n                this.toggle();\n\n        }\n\n    }\n\n\n\n    toggle = () => {\n        //clear error \n\n        this.props.clearErrors();\n        this.setState({\n            modal: !this.state.modal\n        })\n\n    }\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        //register\n        const { name, email, password } = this.state;\n        const newUser = {\n            name,\n            email,\n            password\n        };\n        this.props.register(newUser);\n\n    }\n    render() {\n        return (\n            <div>\n                <NavLink onClick={this.toggle} href=\"#\">Register</NavLink>\n\n                <Modal\n                    isOpen={this.state.modal}\n                    toggle={this.toggle}>\n                    <ModalHeader toggle={this.toggle}>Register</ModalHeader>\n                    {this.state.msg ? <Alert color=\"danger\">{this.state.msg}</Alert> : null}\n                    <ModalBody>\n                        <Form onSubmit={this.onSubmit}>\n                            <FormGroup>\n                                <Label for=\"name\">Name</Label>\n                                <Input type=\"text\"\n                                    name=\"name\"\n                                    id=\"name\"\n                                    placeholder=\"Name..\"\n                                    className=\"mb-3\"\n                                    onChange={this.onChange} >\n                                </Input>\n\n                                <Label for=\"email\">E-mail</Label>\n                                <Input type=\"email\"\n                                    name=\"email\"\n                                    id=\"email\"\n                                    placeholder=\"E-mail..\"\n                                    className=\"mb-3\"\n                                    onChange={this.onChange} >\n                                </Input>\n\n                                <Label for=\"password\">Password</Label>\n                                <Input type=\"password\"\n                                    name=\"password\"\n                                    id=\"password\"\n                                    placeholder=\"Password..\"\n                                    className=\"mb-3\"\n                                    onChange={this.onChange} >\n                                </Input>\n                                <Button\n                                    color=\"dark\"\n                                    style={{ marginTop: '2rem' }} block>\n                                    Register\n                                 </Button>\n\n\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n\n\n                </Modal>\n\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    error: state.error\n}\n)\nexport default connect(mapStateToProps, { register, clearErrors })(RegisterModal)\n","import React, { Component } from 'react'\nimport { Button, Modal, ModalHeader, Alert, NavLink, ModalBody, Form, FormGroup, Label, Input } from 'reactstrap'\nimport { connect } from 'react-redux'\nimport PropTypes from \"prop-types\";\nimport { login } from \"../actions/authAction\";\nimport { clearErrors } from \"../actions/errorAction\";\n\n\n\nclass LoginModal extends Component {\n    state = {\n        modal: false,\n        email: '',\n        password: '',\n        msg: null\n    }\n\n    static propTypes = {\n        isAuthenticated: PropTypes.bool,\n        error: PropTypes.object.isRequired,\n        login: PropTypes.func.isRequired,\n        clearErrors: PropTypes.func.isRequired\n    }\n    componentDidUpdate(prevProps) {\n        const { error, isAuthenticated } = this.props;\n        if (error !== prevProps.error) {\n            if (error.id === 'LOGIN_FAIL') {\n                this.setState({ msg: error.msg.msg })\n            }\n            else {\n                this.setState({ msg: null })\n            }\n\n        }\n        if (this.state.modal) {\n            if (isAuthenticated)\n                this.toggle();\n\n        }\n\n    }\n\n\n\n    toggle = () => {\n        //clear error \n        this.props.clearErrors();\n        this.setState({\n            modal: !this.state.modal\n        })\n    }\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        //login\n        const { email, password } = this.state\n        const user = {\n            email,\n            password\n        }\n        this.props.login(user)\n\n    }\n    render() {\n        return (\n            <div>\n                <NavLink onClick={this.toggle} href=\"#\">Login</NavLink>\n\n                <Modal\n                    isOpen={this.state.modal}\n                    toggle={this.toggle}>\n                    <ModalHeader toggle={this.toggle}>Login</ModalHeader>\n                    {this.state.msg ? <Alert color=\"danger\">{this.state.msg}</Alert> : null}\n                    <ModalBody>\n                        <Form onSubmit={this.onSubmit}>\n                            <FormGroup>\n                                <Label for=\"email\">E-mail</Label>\n                                <Input type=\"email\"\n                                    name=\"email\"\n                                    id=\"email\"\n                                    placeholder=\"E-mail..\"\n                                    className=\"mb-3\"\n                                    onChange={this.onChange} >\n                                </Input>\n\n                                <Label for=\"password\">Password</Label>\n                                <Input type=\"password\"\n                                    name=\"password\"\n                                    id=\"password\"\n                                    placeholder=\"Password..\"\n                                    className=\"mb-3\"\n                                    onChange={this.onChange} >\n                                </Input>\n                                <Button\n                                    color=\"dark\"\n                                    style={{ marginTop: '2rem' }} block>\n                                    Login\n                                 </Button>\n\n\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n\n\n                </Modal>\n\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    error: state.error\n}\n)\nexport default connect(mapStateToProps, { login, clearErrors })(LoginModal)\n","import React, { Component, Fragment } from 'react'\nimport { NavLink } from 'reactstrap'\nimport { connect } from 'react-redux'\nimport { logout } from '../actions/authAction'\nimport PropTypes from 'prop-types'\n\nexport class Logout extends Component {\n    static propTypes = {\n        logout: PropTypes.func.isRequired\n    }\n    render() {\n        return (\n            <Fragment>\n                <NavLink onClick={this.props.logout} href=\"#\">\n                    Logout\n                </NavLink>\n            </Fragment>\n        )\n    }\n}\n\nexport default connect(null, { logout })(Logout);\n","import React, { Component, Fragment } from 'react'\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, Container } from 'reactstrap'\nimport RegisterModal from './RegisterModal'\nimport LoginModal from './LoginModal'\nimport Logout from './Logout'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nexport class AppNavbar extends Component {\n    state = {\n        isOpen: false\n    }\n\n    static propTypes = {\n        auth: PropTypes.object.isRequired\n    }\n\n    toggle = () => {\n        this.setState({\n            isOpen: !this.state.isOpen\n        })\n    }\n\n\n\n    render() {\n        const { isAuthenticated, user } = this.props.auth;\n\n\n        const authLinks = (\n            <Fragment>\n                <NavItem>\n                    <span className=\"navbar-text mr-3\">\n                        <strong>{user ? `Welcome ${user.name}` : ''}</strong>\n                    </span>\n                </NavItem>\n                <NavItem>\n                    <Logout></Logout>\n                </NavItem>\n            </Fragment>\n        )\n        const guestLinks = (\n            <Fragment>\n                <NavItem>\n                    <RegisterModal></RegisterModal>\n                </NavItem>\n                <NavItem>\n                    <LoginModal></LoginModal>\n                </NavItem>\n            </Fragment>\n        )\n        return (\n            <div>\n\n                <Navbar color=\"dark\" expand=\"sm\" className=\"mb-5\" style={{ listStyle: \"none\" }}>\n                    <Container>\n                        <NavbarBrand href=\"/\">Shopping List</NavbarBrand>\n                        <NavbarToggler onClick={this.toggle}></NavbarToggler>\n                        <Collapse isOpen={this.state.isOpen} navbar></Collapse>\n                        <Nav className=\"ml-auto\" navbar></Nav>\n                        {isAuthenticated ? authLinks : guestLinks}\n\n                    </Container>\n                </Navbar>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => ({\n    auth: state.auth\n})\nexport default connect(mapStateToProps, null)(AppNavbar)\n","import axios from 'axios'\nimport { tokenConfig } from './authAction'\nimport { returnErrors } from './errorAction'\n\nimport { GET_ITEMS, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING } from './types'\n\nexport const getItems = () => dispatch => {\n    dispatch(setItemsLoading());\n    axios.get('/api/items').then(res =>\n        dispatch({\n            type: GET_ITEMS,\n            payload: res.data\n        }))\n        .catch(err => dispatch(returnErrors(err.response.data, err.response.data)))\n}\nexport const deleteItem = (id) => (dispatch, getState) => {\n    axios.delete(`api/items/${id}`, tokenConfig(getState)).then(res =>\n        dispatch({\n            type: DELETE_ITEM,\n            payload: id\n        }))\n        .catch(err => dispatch(returnErrors(err.response.data, err.response.data)))\n\n}\nexport const addItem = (item) => (dispatch, getState) => {\n    axios.post('api/items', item, tokenConfig(getState))\n        .then(res =>\n            dispatch({\n                type: ADD_ITEM,\n                payload: res.data\n            })\n        )\n        .catch(err => dispatch(returnErrors(err.response.data, err.response.data)))\n\n}\nexport const setItemsLoading = () => {\n    return {\n        type: ITEMS_LOADING,\n    }\n}","import React, { Component } from 'react'\nimport { Container, ListGroup, ListGroupItem, Button } from 'reactstrap'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\nimport { connect } from 'react-redux'\nimport { getItems, deleteItem } from '../actions/itemActions'\nimport PropTypes from 'prop-types'\n\n\nclass ShoppingList extends Component {\n\n    componentDidMount() {\n        this.props.getItems();\n    }\n    onDeleteClick = (id) => {\n        this.props.deleteItem(id);\n\n    }\n    static propTypes = {\n        getItems: PropTypes.func.isRequired,\n        item: PropTypes.object.isRequired,\n        isAuthenticated: PropTypes.bool\n\n    }\n\n    render() {\n        const { items } = this.props.item;\n        return (\n            <Container>\n\n                <ListGroup>\n                    <TransitionGroup className=\"shopping--list\">\n                        {items.map(({ _id, name }) => (\n                            <CSSTransition key={_id} timeout={500} classNames=\"fade\">\n                                <ListGroupItem>\n                                    {this.props.isAuthenticated ? (<Button className=\"remove-btn\" color=\"danger\" size=\"sm\"\n                                        onClick={this.onDeleteClick.bind(this, _id)}>&times;</Button>) : null}\n                                    {name}\n                                </ListGroupItem>\n\n                            </CSSTransition>\n                        ))}\n                    </TransitionGroup>\n\n                </ListGroup>\n            </Container>\n        )\n    }\n}\n\n\n\nconst mapStateToProps = (state) => ({\n    item: state.item,\n    isAuthenticated: state.auth.isAuthenticated\n\n})\n\nexport default connect(mapStateToProps, { getItems, deleteItem })(ShoppingList)\n","import React, { Component } from 'react'\nimport { Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input } from 'reactstrap'\nimport { connect } from 'react-redux'\nimport { addItem } from '../actions/itemActions'\nimport PropTypes from 'prop-types'\n\n\n\nclass ItemModal extends Component {\n    state = {\n        modal: false,\n        name: \"\"\n    }\n\n    static propTypes = {\n        isAuthenticated: PropTypes.bool\n    }\n\n\n\n    toggle = () => {\n        this.setState({\n            modal: !this.state.modal\n        })\n    }\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        const newItem = {\n            name: this.state.name\n        }\n        this.props.addItem(newItem);\n\n        this.toggle();\n\n    }\n    render() {\n        return (\n            <div>\n                {this.props.isAuthenticated ? (\n                    <Button color=\"dark\" style={{ marginBottom: '2rem' }} onClick={this.toggle}>\n                        Add item\n                    </Button>\n                ) : <h4 className=\"mb-3 ml-4 \">Please log in to manage items</h4>}\n\n\n                <Modal\n                    isOpen={this.state.modal}\n                    toggle={this.toggle}>\n                    <ModalHeader toggle={this.toggle}>Add to shopping list</ModalHeader>\n\n                    <ModalBody>\n                        <Form onSubmit={this.onSubmit}>\n                            <FormGroup>\n                                <Label for=\"item\">\n                                    <Input type=\"text\" name=\"name\" id=\"item\" placeholder=\"Add shopping item..\" onChange={this.onChange} >\n\n                                    </Input>\n                                    <Button\n                                        color=\"dark\"\n                                        style={{ marginTop: '2rem' }} block>\n                                        Add item\n                                    </Button>\n\n                                </Label>\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n\n\n                </Modal>\n\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    item: state.item,\n    isAuthenticated: state.auth.isAuthenticated\n}\n)\nexport default connect(mapStateToProps, { addItem })(ItemModal)\n","import { GET_ITEMS, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING } from '../actions/types'\n\n\nconst initialState = {\n    items: [],\n    loading: false\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_ITEMS:\n            return {\n                ...state,\n                items: action.payload,\n                loading: false\n            }\n        case DELETE_ITEM:\n            return {\n                ...state,\n                items: state.items.filter(item => item._id !== action.payload)\n            }\n        case ADD_ITEM:\n            return {\n                ...state,\n                items: [action.payload, ...state.items]\n            }\n        case ITEMS_LOADING:\n            return {\n                ...state,\n                loading: true\n            }\n        default:\n            return state;\n    }\n\n}\n\n\n\n\n","import { GET_ERRORS, CLEAR_ERRORS } from \"../actions/types\";\n\n\nconst initialState = {\n    msg: {},\n    status: null,\n    id: null\n}\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_ERRORS:\n            return {\n                msg: action.payload.msg,\n                status: action.payload.status,\n                id: action.payload.id\n            }\n        case CLEAR_ERRORS:\n            return {\n                msg: {},\n                status: null,\n                id: null\n            }\n        default:\n            return state;\n\n    }\n\n}\n","import { USER_LOADED, USER_LOADING, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_SUCCESS, REGISTER_FAIL, REGISTER_SUCCESS } from \"../actions/types\";\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    isLoading: false,\n    user: null\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case USER_LOADING:\n            return {\n                ...state,\n                isLoading: true\n            };\n        case USER_LOADED:\n            return {\n                ...state,\n                isAuthenticated: true,\n                isLoading: false,\n                user: action.payload\n            };\n        case LOGIN_SUCCESS:\n        case REGISTER_SUCCESS:\n            localStorage.setItem('token', action.payload.token);\n            return {\n                ...state,\n                ...action.payload,\n                isAuthenticated: true,\n                isLoading: false,\n                user: action.payload\n            }\n        case AUTH_ERROR:\n        case LOGIN_FAIL:\n        case LOGOUT_SUCCESS:\n        case REGISTER_FAIL:\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                token: null,\n                user: null,\n                isAuthenticated: false,\n                isLoading: false\n            }\n\n        default:\n            return state\n    }\n}\n\n\n\n","import { combineReducers } from 'redux'\nimport itemReducer from './itemReducer'\nimport errorReducer from './errorReducer'\nimport authReducer from \"./authReducer\";\nexport default combineReducers({\n    item: itemReducer,\n    error: errorReducer,\n    auth: authReducer\n\n})","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers'\n\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(rootReducer, initialState, compose(\n    applyMiddleware(...middleware),\n    (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()) || compose));\n\nexport default store;","import React, { Component } from 'react'\nimport \"./App.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport AppNavbar from './components/AppNavbar'\nimport ShoppingList from './components/ShoppingList'\nimport ItemModal from './components/ItemModal'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport { Container } from 'reactstrap'\nimport { loadUser } from './actions/authAction'\n\n\nexport default class App extends Component {\n    componentDidMount() {\n        store.dispatch(loadUser());\n    }\n    render() {\n        return (\n            <Provider store={store}>\n                <div className=\"App\" >\n                    <AppNavbar></AppNavbar>\n                    <Container>\n                        <ItemModal></ItemModal>\n                        <ShoppingList></ShoppingList>\n                    </Container>\n                </div>\n            </Provider>\n        )\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <App />,\n\n    document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}